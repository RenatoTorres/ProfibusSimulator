/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * JFrameColumnSel.java
 *
 * Created on Nov 14, 2012, 10:29:07 AM
 */
package view.fdl.FDLAnalysis;

/**
 *
 * @author Renato Veiga
 */
public class JFrameColumnSel extends javax.swing.JFrame {
    private final FDLTelegramsTable t1;

    /** Creates new form JFrameColumnSel */
    public JFrameColumnSel(FDLTelegramsTable tableframe) {
        initComponents();
        t1 = tableframe;
        LoadCheckBoxes();
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jCheckBoxFrameNr = new javax.swing.JCheckBox();
        jCheckBoxAddress = new javax.swing.JCheckBox();
        jCheckBoxService = new javax.swing.JCheckBox();
        jCheckBoxMessage = new javax.swing.JCheckBox();
        jCheckBoxReqRes = new javax.swing.JCheckBox();
        jCheckBoxSAPS = new javax.swing.JCheckBox();
        jCheckBoxDataUnit = new javax.swing.JCheckBox();
        jCheckBoxData = new javax.swing.JCheckBox();
        jCheckBoxTimeStamp = new javax.swing.JCheckBox();
        jCheckBoxAnalysis = new javax.swing.JCheckBox();
        jButtonOK = new javax.swing.JButton();
        jButtonCancel = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        org.jdesktop.application.ResourceMap resourceMap = org.jdesktop.application.Application.getInstance(profibusnetworksimulator.ProfibusNetworkSimulatorAppNew.class).getContext().getResourceMap(JFrameColumnSel.class);
        setTitle(resourceMap.getString("Form.title")); // NOI18N
        setAlwaysOnTop(true);
        setModalExclusionType(java.awt.Dialog.ModalExclusionType.APPLICATION_EXCLUDE);
        setName("Form"); // NOI18N
        setResizable(false);

        jPanel1.setName("jPanel1"); // NOI18N

        jCheckBoxFrameNr.setText(resourceMap.getString("jCheckBoxFrameNr.text")); // NOI18N
        jCheckBoxFrameNr.setName("jCheckBoxFrameNr"); // NOI18N

        jCheckBoxAddress.setText(resourceMap.getString("jCheckBoxAddress.text")); // NOI18N
        jCheckBoxAddress.setName("jCheckBoxAddress"); // NOI18N

        jCheckBoxService.setText(resourceMap.getString("jCheckBoxService.text")); // NOI18N
        jCheckBoxService.setName("jCheckBoxService"); // NOI18N

        jCheckBoxMessage.setText(resourceMap.getString("jCheckBoxMessage.text")); // NOI18N
        jCheckBoxMessage.setName("jCheckBoxMessage"); // NOI18N

        jCheckBoxReqRes.setText(resourceMap.getString("jCheckBoxReqRes.text")); // NOI18N
        jCheckBoxReqRes.setName("jCheckBoxReqRes"); // NOI18N

        jCheckBoxSAPS.setText(resourceMap.getString("jCheckBoxSAPS.text")); // NOI18N
        jCheckBoxSAPS.setName("jCheckBoxSAPS"); // NOI18N

        jCheckBoxDataUnit.setText(resourceMap.getString("jCheckBoxDataUnit.text")); // NOI18N
        jCheckBoxDataUnit.setName("jCheckBoxDataUnit"); // NOI18N

        jCheckBoxData.setText(resourceMap.getString("jCheckBoxData.text")); // NOI18N
        jCheckBoxData.setName("jCheckBoxData"); // NOI18N

        jCheckBoxTimeStamp.setText(resourceMap.getString("jCheckBoxTimeStamp.text")); // NOI18N
        jCheckBoxTimeStamp.setName("jCheckBoxTimeStamp"); // NOI18N

        jCheckBoxAnalysis.setText(resourceMap.getString("jCheckBoxAnalysis.text")); // NOI18N
        jCheckBoxAnalysis.setName("jCheckBoxAnalysis"); // NOI18N

        jButtonOK.setText(resourceMap.getString("jButtonOK.text")); // NOI18N
        jButtonOK.setName("jButtonOK"); // NOI18N
        jButtonOK.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonOKActionPerformed(evt);
            }
        });

        jButtonCancel.setText(resourceMap.getString("jButtonCancel.text")); // NOI18N
        jButtonCancel.setName("jButtonCancel"); // NOI18N
        jButtonCancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonCancelActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jCheckBoxFrameNr)
                    .addComponent(jCheckBoxAddress)
                    .addComponent(jCheckBoxService)
                    .addComponent(jCheckBoxMessage)
                    .addComponent(jCheckBoxReqRes))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jCheckBoxSAPS)
                    .addComponent(jCheckBoxDataUnit)
                    .addComponent(jCheckBoxData)
                    .addComponent(jCheckBoxTimeStamp)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jCheckBoxAnalysis)
                        .addGap(41, 41, 41)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jButtonOK, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jButtonCancel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jCheckBoxFrameNr)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jCheckBoxAddress)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jCheckBoxService))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jCheckBoxSAPS)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jCheckBoxDataUnit)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jCheckBoxData)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jCheckBoxMessage)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jCheckBoxReqRes))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jCheckBoxTimeStamp)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jCheckBoxAnalysis))))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(114, 114, 114)
                        .addComponent(jButtonOK)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButtonCancel)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

private void jButtonOKActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonOKActionPerformed
        t1.hider.setVisible("Address"  ,jCheckBoxAddress.isSelected() );
        t1.hider.setVisible("Analysis" ,jCheckBoxAnalysis.isSelected() );
        t1.hider.setVisible("Data"     ,jCheckBoxData.isSelected() );
        t1.hider.setVisible("Data_Unit_Len",jCheckBoxDataUnit.isSelected( ) );
        t1.hider.setVisible("Frame Nr" ,jCheckBoxFrameNr.isSelected( ) );
        t1.hider.setVisible("Message"  ,jCheckBoxMessage.isSelected() );
        t1.hider.setVisible("Req/Res"  ,jCheckBoxReqRes.isSelected( ) );
        t1.hider.setVisible("SAPS"     ,jCheckBoxSAPS.isSelected() );
        t1.hider.setVisible("Service"  ,jCheckBoxService.isSelected() );
        t1.hider.setVisible("Timestamp",jCheckBoxTimeStamp.isSelected( ) );
        setVisible( false );
        dispose();
}//GEN-LAST:event_jButtonOKActionPerformed

private void jButtonCancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonCancelActionPerformed
        setVisible( false );
        dispose();
}//GEN-LAST:event_jButtonCancelActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonCancel;
    private javax.swing.JButton jButtonOK;
    private javax.swing.JCheckBox jCheckBoxAddress;
    private javax.swing.JCheckBox jCheckBoxAnalysis;
    private javax.swing.JCheckBox jCheckBoxData;
    private javax.swing.JCheckBox jCheckBoxDataUnit;
    private javax.swing.JCheckBox jCheckBoxFrameNr;
    private javax.swing.JCheckBox jCheckBoxMessage;
    private javax.swing.JCheckBox jCheckBoxReqRes;
    private javax.swing.JCheckBox jCheckBoxSAPS;
    private javax.swing.JCheckBox jCheckBoxService;
    private javax.swing.JCheckBox jCheckBoxTimeStamp;
    private javax.swing.JPanel jPanel1;
    // End of variables declaration//GEN-END:variables

    private void LoadCheckBoxes( ) {
        jCheckBoxAddress.setSelected( t1.hider.IsColumnVisible("Address") );
        jCheckBoxAnalysis.setSelected( t1.hider.IsColumnVisible("Analysis") );
        jCheckBoxData.setSelected(  t1.hider.IsColumnVisible("Data") );
        jCheckBoxDataUnit.setSelected(  t1.hider.IsColumnVisible("Data_Unit_Len") );
        jCheckBoxFrameNr.setSelected(  t1.hider.IsColumnVisible("Frame Nr") );
        jCheckBoxMessage.setSelected( t1.hider.IsColumnVisible("Message") );
        jCheckBoxReqRes.setSelected(  t1.hider.IsColumnVisible("Req/Res")  );
        jCheckBoxSAPS.setSelected(  t1.hider.IsColumnVisible("SAPS")  );
        jCheckBoxService.setSelected(  t1.hider.IsColumnVisible("Service")  );
        jCheckBoxTimeStamp.setSelected(  t1.hider.IsColumnVisible("Timestamp")  );
    }
}
